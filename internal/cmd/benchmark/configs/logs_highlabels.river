logging {
	level = "debug"
}

prometheus.scrape "scraper" {
	targets         = concat([{"__address__" = "localhost:12346"}])
	forward_to      = [prometheus.relabel.mutator.receiver]
	scrape_interval = "60s"
}

prometheus.relabel "mutator" {
	rule {
		source_labels = ["__name__"]
		regex         = "(.+)"
		replacement   = "normal"
		target_label  = "runtype"
	}

	rule {
		source_labels = ["__name__"]
		regex         = "(.+)"
		replacement   = env("NAME")
		target_label  = "test_name"
	}

	rule {
		source_labels = ["__name__"]
		action        = "keep"
		regex         = "(alloy_wal_storage_active_series|alloy_resources_process_cpu_seconds_total|go_memstats_alloc_bytes|go_gc_duration_seconds_sum|go_gc_duration_seconds_count|loki_source_file_files_active_total|loki_write_encoded_bytes_total|loki_write_sent_bytes_total|loki_sum_source_file_read_bytes_total)"
	}

	forward_to = [prometheus.remote_write.agent_stats.receiver]
}

prometheus.remote_write "agent_stats" {
	endpoint {
		url = "https://prometheus-us-central1.grafana.net/api/prom/push"

		basic_auth {
			username = env("PROM_USERNAME")
			password = env("PROM_PASSWORD")
		}
	}
}

discovery.http "default" {
  url = "http://localhost:9001/api/v0/component/loki.test.logs.logs/discovery"
}

discovery.relabel "relabeller" {
	targets    = discovery.http.default.targets

    rule {
      source_labels = ["__meta_kubernetes_pod_label_component"]
      target_label  = "__service__"
    }

    rule {
      source_labels = ["__meta_kubernetes_pod_node_name"]
      target_label  = "__host__"
    }

    rule {
      source_labels = ["__meta_kubernetes_pod_label_name"]
      target_label  = "name"
    }

    rule {
      regex        = "__meta_kubernetes_pod_label_app_kubernetes_io_(.+)"
      target_label = "$1"
      action       = "labelmap"
    }

    rule {
      regex        = "__meta_kubernetes_pod_label_app_acbdefhgijklmn_com_(.+)"
      target_label = "$1"
      action       = "labelmap"
    }

    rule {
      regex        = "__meta_kubernetes_node_label_node_kubernetes_io_(.+)"
      target_label = "$1"
      action       = "labelmap"
    }

    rule {
      regex        = "__meta_kubernetes_node_label_topology_kubernetes_io_(.+)"
      target_label = "$1"
      action       = "labelmap"
    }

    rule {
      source_labels = ["__meta_kubernetes_node_label_workload"]
      target_label  = "node_workload"
    }

    rule {
      source_labels = ["__meta_kubernetes_node_label_node_asg"]
      target_label  = "node_asg"
    }

    rule {
      regex  = "__meta_kubernetes_pod_label_(.+)"
      action = "labeldrop"
    }

    rule {
      source_labels = ["__meta_kubernetes_namespace"]
      target_label  = "namespace"
    }

    rule {
      source_labels = ["__meta_kubernetes_pod_name"]
      target_label  = "pod"
    }

    rule {
      source_labels = ["__meta_kubernetes_pod_container_name"]
      target_label  = "container"
    }

    rule {
      source_labels = ["__meta_kubernetes_pod_node_name"]
      target_label  = "instance"
    }

    rule {
      source_labels = ["__meta_kubernetes_pod_controller_kind"]
      target_label  = "workload_type"
    }
}

loki.source.file "tmpfiles" {
	targets    = discovery.relabel.relabeller.output
	forward_to = [loki.write.local.receiver]
}

loki.write "local" {
	endpoint {
		url = "http://localhost:8888/logs"
	}
}


prometheus.exporter.process "integrations_process_exporter" {
  matcher {
    name    = "" // MRD slightly different
    cmdline = [".+"]
  }
}

discovery.relabel "integrations_process_exporter" {
  targets = prometheus.exporter.process.integrations_process_exporter.targets

  rule {
    target_label = "job"
    replacement  = "integrations/process_exporter"
  }
}

prometheus.exporter.self "alloy" {
}

